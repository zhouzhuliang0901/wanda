package com.wondersgroup.wdf.extPdCclist.dao;

import java.math.*;
import java.sql.*;
import java.util.*;
import wfc.facility.tool.autocode.*;
import wfc.service.database.*;
import org.springframework.stereotype.Repository;

/**
 * 子证归集表
 * @author generated by wfc.facility.tool.autocode.InternalDaoGenerator
 */
@Repository
public class ExtPdCclistDao {

    private Connection con = null;

    public ExtPdCclistDao() {
    }

    public ExtPdCclistDao(Connection con) {
        this.con = con;
    }

    public void add(ExtPdCclist info) {
        String sql = "insert into EXT_PD_CCLIST(ST_CCLIST_ID, ST_APPLY_NO, ST_SUB_NO, ST_ORGAN_ID, ST_ORGAN_NAME, ST_ITEM_CNO, ST_ITEM_NO, ST_CERT_NO, ST_CERT_NAME, ST_LICENSE_NO, DT_MARK, ST_CORPORATION_ORGID, ST_ENAME, ST_STATUS, DT_CREATE, DT_UPDATE) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        Object[] obj = {
            info.getStCclistId(),
            info.getStApplyNo(),
            info.getStSubNo(),
            info.getStOrganId(),
            info.getStOrganName(),
            info.getStItemCno(),
            info.getStItemNo(),
            info.getStCertNo(),
            info.getStCertName(),
            info.getStLicenseNo(),
            info.getDtMark(),
            info.getStCorporationOrgid(),
            info.getStEname(),
            info.getStStatus(),
            info.getDtCreate(),
            info.getDtUpdate()        	
        };
        if (con == null) {
            SQL.execute(sql, obj);
        } else {
            SQL.execute(con, sql, obj);
        }
    }

    public void update(ExtPdCclist info) {
        String sql = "update EXT_PD_CCLIST set ST_APPLY_NO = ?, ST_SUB_NO = ?, ST_ORGAN_ID = ?, ST_ORGAN_NAME = ?, ST_ITEM_CNO = ?, ST_ITEM_NO = ?, ST_CERT_NO = ?, ST_CERT_NAME = ?, ST_LICENSE_NO = ?, DT_MARK = ?, ST_CORPORATION_ORGID = ?, ST_ENAME = ?, ST_STATUS = ?, DT_CREATE = ?, DT_UPDATE = ? where ST_CCLIST_ID = ?";
        Object[] obj = {
            info.getStApplyNo(),
            info.getStSubNo(),
            info.getStOrganId(),
            info.getStOrganName(),
            info.getStItemCno(),
            info.getStItemNo(),
            info.getStCertNo(),
            info.getStCertName(),
            info.getStLicenseNo(),
            info.getDtMark(),
            info.getStCorporationOrgid(),
            info.getStEname(),
            info.getStStatus(),
            info.getDtCreate(),
            info.getDtUpdate(),
            info.getStCclistId()        	
        };
        if (con == null) {
            SQL.execute(sql, obj);
        } else {
            SQL.execute(con, sql, obj);
        }
    }

    public int update(Map<String, Object> map, Conditions conds) {
        String sql = "update EXT_PD_CCLIST set ";
        List<Object> list = new ArrayList<Object>();
        int i = 0;
        for (String field : map.keySet()) {
            if (i++ > 0) {
                sql += ", ";
            }
            sql += field + " = ?";
            list.add(map.get(field));
        }
        String subsql = conds != null ? conds.toString() : "";
        if ("".equals(subsql)) {
            if (con == null) {
                return SQL.execute(sql).TOTAL_RECORD_COUNT;
            } else {
                return SQL.execute(con, sql).TOTAL_RECORD_COUNT;
            }
        } else {
            sql += " where " + subsql;
            list.addAll(conds.getObjectList());
            if (con == null) {
                return SQL.execute(sql, list.toArray()).TOTAL_RECORD_COUNT;
            } else {
                return SQL.execute(con, sql, list.toArray()).TOTAL_RECORD_COUNT;
            }
        }
    }
    
    public int delete(Conditions conds) {
        String sql = "delete from EXT_PD_CCLIST";
        String subsql = conds != null ? conds.toString() : "";
        if ("".equals(subsql)) {
            if (con == null) {
                return SQL.execute(sql).TOTAL_RECORD_COUNT;
            } else {
                return SQL.execute(con, sql).TOTAL_RECORD_COUNT;
            }
        } else {
            sql += " where " + subsql;
            if (con == null) {
                return SQL.execute(sql, conds.getObjectArray()).TOTAL_RECORD_COUNT;
            } else {
                return SQL.execute(con, sql, conds.getObjectArray()).TOTAL_RECORD_COUNT;
            }
        }
    }

	public void delete(String[] stCclistId) {
        Conditions conds = Conditions.newOrConditions();
        for (int i = 0; i < stCclistId.length; i++) {
            Conditions subconds = Conditions.newAndConditions();
            subconds.add(new Condition("ST_CCLIST_ID", Condition.OT_EQUAL, stCclistId[i]));
            conds.add(subconds);
        }
        delete(conds);
    }

	public void delete(String stCclistId) {
        Conditions conds = Conditions.newAndConditions();
        conds.add(new Condition("ST_CCLIST_ID", Condition.OT_EQUAL, stCclistId));
        delete(conds);
    }

    public PaginationArrayList<ExtPdCclist> query(Conditions conds, String suffix, int pageSize, int currentPage) {
        RecordSet rs;
        if (con == null) {
            rs = SQL.query("EXT_PD_CCLIST", "*", conds, suffix, pageSize, currentPage);
        } else {
            rs = SQL.query(con, "EXT_PD_CCLIST", "*", conds, suffix, pageSize, currentPage);
        }
        PaginationArrayList<ExtPdCclist> pal = new PaginationArrayList<ExtPdCclist>(rs.TOTAL_RECORD_COUNT, rs.COMMON_PAGE_SIZE, rs.CURRENT_PAGE);
        while (rs.next()) {
            ExtPdCclist info = new ExtPdCclist();
            setProperties(info, rs);
            pal.add(info);
        }
        return pal;
    }

    public List<ExtPdCclist> query(Conditions conds, String suffix) {
        RecordSet rs;
        if (con == null) {
            rs = SQL.query("EXT_PD_CCLIST", "*", conds, suffix);
        } else {
            rs = SQL.query(con, "EXT_PD_CCLIST", "*", conds, suffix);
        }
        ArrayList<ExtPdCclist> al = new ArrayList<ExtPdCclist>();
        while (rs.next()) {
            ExtPdCclist info = new ExtPdCclist();
            setProperties(info, rs);
            al.add(info);
        }
        return al;
    }
    
    public static void setProperties(ExtPdCclist info, RecordSet rs){
        info.setStCclistId(rs.getOriginalString("ST_CCLIST_ID"));
        info.setStApplyNo(rs.getOriginalString("ST_APPLY_NO"));
        info.setStSubNo(rs.getOriginalString("ST_SUB_NO"));
        info.setStOrganId(rs.getOriginalString("ST_ORGAN_ID"));
        info.setStOrganName(rs.getOriginalString("ST_ORGAN_NAME"));
        info.setStItemCno(rs.getOriginalString("ST_ITEM_CNO"));
        info.setStItemNo(rs.getOriginalString("ST_ITEM_NO"));
        info.setStCertNo(rs.getOriginalString("ST_CERT_NO"));
        info.setStCertName(rs.getOriginalString("ST_CERT_NAME"));
        info.setStLicenseNo(rs.getOriginalString("ST_LICENSE_NO"));
        info.setDtMark(rs.getTimestamp("DT_MARK"));
        info.setStCorporationOrgid(rs.getOriginalString("ST_CORPORATION_ORGID"));
        info.setStEname(rs.getOriginalString("ST_ENAME"));
        info.setStStatus(rs.getOriginalString("ST_STATUS"));
        info.setDtCreate(rs.getTimestamp("DT_CREATE"));
        info.setDtUpdate(rs.getTimestamp("DT_UPDATE"));
    }

	public ExtPdCclist get(String stCclistId) {
        Conditions conds = Conditions.newAndConditions();
        conds.add(new Condition("ST_CCLIST_ID", Condition.OT_EQUAL, stCclistId));
        List<ExtPdCclist> list = query(conds, null);
        return list.size() > 0 ? list.get(0) : null;
    }

}
