package com.wondersgroup.business.dao;

import java.math.*;
import java.sql.*;
import java.util.*;
import wfc.facility.tool.autocode.*;
import wfc.service.database.*;
import org.springframework.stereotype.Repository;

import com.wondersgroup.business.bean.SelmAccessApply;
import com.wondersgroup.business.bean.SelmAttach;

/**
 * 接入申请
 * @author generated by wfc.facility.tool.autocode.InternalDaoGenerator
 */
@Repository
public class SelmAccessApplyDao {

    private Connection con = null;

    public SelmAccessApplyDao() {
    }

    public SelmAccessApplyDao(Connection con) {
        this.con = con;
    }

    public void add(SelmAccessApply info) {
        String sql = "insert into SELM_ACCESS_APPLY(ST_ACCESS_APPLY_ID, ST_APPLY_TITLE, ST_APPLY_CONTENT, ST_ATTACH_ID, NM_STATUS, ST_APPLY_USER_ID, ST_APPLY_USER_NAME, DT_APPLY, ST_AUDIT_USER_ID, ST_AUDIT_USER_NAME, DT_AUDIT, DT_CREATE, ST_DESC, ST_EXT1, ST_EXT2) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        Object[] obj = {
            info.getStAccessApplyId(),
            info.getStApplyTitle(),
            info.getStApplyContent(),
            info.getStAttachId(),
            info.getNmStatus(),
            info.getStApplyUserId(),
            info.getStApplyUserName(),
            info.getDtApply(),
            info.getStAuditUserId(),
            info.getStAuditUserName(),
            info.getDtAudit(),
            info.getDtCreate(),
            info.getStDesc(),
            info.getStExt1(),
            info.getStExt2()        	
        };
        if (con == null) {
            SQL.execute(sql, obj);
        } else {
            SQL.execute(con, sql, obj);
        }
    }

    public void update(SelmAccessApply info) {
    	
        String sql = "update SELM_ACCESS_APPLY set ST_APPLY_TITLE = ?, ST_APPLY_CONTENT = ?, ST_ATTACH_ID = ?, NM_STATUS = ?, ST_APPLY_USER_ID = ?, ST_APPLY_USER_NAME = ?, DT_APPLY = ?, ST_AUDIT_USER_ID = ?, ST_AUDIT_USER_NAME = ?, DT_AUDIT = ?, DT_CREATE = ?, ST_DESC = ?, ST_EXT1 = ?, ST_EXT2 = ? where ST_ACCESS_APPLY_ID = ?";
        Object[] obj = {
            info.getStApplyTitle(),
            info.getStApplyContent(),
            info.getStAttachId(),
            info.getNmStatus(),
            info.getStApplyUserId(),
            info.getStApplyUserName(),
            info.getDtApply(),
            info.getStAuditUserId(),
            info.getStAuditUserName(),
            info.getDtAudit(),
            info.getDtCreate(),
            info.getStDesc(),
            info.getStExt1(),
            info.getStExt2(),
            info.getStAccessApplyId()        	
        };
        if (con == null) {
            SQL.execute(sql, obj);
        } else {
            SQL.execute(con, sql, obj);
        }
    }

    public int update(Map<String, Object> map, Conditions conds) {
        String sql = "update SELM_ACCESS_APPLY set ";
        List<Object> list = new ArrayList<Object>();
        int i = 0;
        for (String field : map.keySet()) {
            if (i++ > 0) {
                sql += ", ";
            }
            sql += field + " = ?";
            list.add(map.get(field));
        }
        String subsql = conds != null ? conds.toString() : "";
        if ("".equals(subsql)) {
            if (con == null) {
                return SQL.execute(sql).TOTAL_RECORD_COUNT;
            } else {
                return SQL.execute(con, sql).TOTAL_RECORD_COUNT;
            }
        } else {
            sql += " where " + subsql;
            list.addAll(conds.getObjectList());
            if (con == null) {
                return SQL.execute(sql, list.toArray()).TOTAL_RECORD_COUNT;
            } else {
                return SQL.execute(con, sql, list.toArray()).TOTAL_RECORD_COUNT;
            }
        }
    }
    
    public int delete(Conditions conds) {
        String sql = "delete from SELM_ACCESS_APPLY";
        String subsql = conds != null ? conds.toString() : "";
        if ("".equals(subsql)) {
            if (con == null) {
                return SQL.execute(sql).TOTAL_RECORD_COUNT;
            } else {
                return SQL.execute(con, sql).TOTAL_RECORD_COUNT;
            }
        } else {
            sql += " where " + subsql;
            if (con == null) {
                return SQL.execute(sql, conds.getObjectArray()).TOTAL_RECORD_COUNT;
            } else {
                return SQL.execute(con, sql, conds.getObjectArray()).TOTAL_RECORD_COUNT;
            }
        }
    }

	public void delete(String[] stAccessApplyId) {
        Conditions conds = Conditions.newOrConditions();
        for (int i = 0; i < stAccessApplyId.length; i++) {
            Conditions subconds = Conditions.newAndConditions();
            subconds.add(new Condition("ST_ACCESS_APPLY_ID", Condition.OT_EQUAL, stAccessApplyId[i]));
            conds.add(subconds);
        }
        delete(conds);
    }

	public void delete(String stAccessApplyId) {
        Conditions conds = Conditions.newAndConditions();
        conds.add(new Condition("ST_ACCESS_APPLY_ID", Condition.OT_EQUAL, stAccessApplyId));
        delete(conds);
    }

    public PaginationArrayList<SelmAccessApply> query(Conditions conds, String suffix, int pageSize, int currentPage) {
        RecordSet rs;
        if (con == null) {
            rs = SQL.query("SELM_ACCESS_APPLY", "*", conds, suffix, pageSize, currentPage);
        } else {
            rs = SQL.query(con, "SELM_ACCESS_APPLY", "*", conds, suffix, pageSize, currentPage);
        }
        PaginationArrayList<SelmAccessApply> pal = new PaginationArrayList<SelmAccessApply>(rs.TOTAL_RECORD_COUNT, rs.COMMON_PAGE_SIZE, rs.CURRENT_PAGE);
        while (rs.next()) {
            SelmAccessApply info = new SelmAccessApply();
            setProperties(info, rs);
            pal.add(info);
        }
        return pal;
    }

    public List<SelmAccessApply> query(Conditions conds, String suffix) {
        RecordSet rs;
        if (con == null) {
            rs = SQL.query("SELM_ACCESS_APPLY", "*", conds, suffix);
        } else {
            rs = SQL.query(con, "SELM_ACCESS_APPLY", "*", conds, suffix);
        }
        ArrayList<SelmAccessApply> al = new ArrayList<SelmAccessApply>();
        while (rs.next()) {
            SelmAccessApply info = new SelmAccessApply();
            setProperties(info, rs);
            al.add(info);
        }
        return al;
    }
    
    public static void setProperties(SelmAccessApply info, RecordSet rs){
        info.setStAccessApplyId(rs.getOriginalString("ST_ACCESS_APPLY_ID"));
        info.setStApplyTitle(rs.getOriginalString("ST_APPLY_TITLE"));
        info.setStApplyContent(rs.getOriginalString("ST_APPLY_CONTENT"));
        info.setStAttachId(rs.getOriginalString("ST_ATTACH_ID"));
        info.setNmStatus(rs.getBigDecimal("NM_STATUS"));
        info.setStApplyUserId(rs.getOriginalString("ST_APPLY_USER_ID"));
        info.setStApplyUserName(rs.getOriginalString("ST_APPLY_USER_NAME"));
        info.setDtApply(rs.getTimestamp("DT_APPLY"));
        info.setStAuditUserId(rs.getOriginalString("ST_AUDIT_USER_ID"));
        info.setStAuditUserName(rs.getOriginalString("ST_AUDIT_USER_NAME"));
        info.setDtAudit(rs.getTimestamp("DT_AUDIT"));
        info.setDtCreate(rs.getTimestamp("DT_CREATE"));
        info.setStDesc(rs.getOriginalString("ST_DESC"));
        info.setStExt1(rs.getOriginalString("ST_EXT1"));
        info.setStExt2(rs.getOriginalString("ST_EXT2"));
    }

	public SelmAccessApply get(String stAccessApplyId) {
        Conditions conds = Conditions.newAndConditions();
        conds.add(new Condition("ST_ACCESS_APPLY_ID", Condition.OT_EQUAL, stAccessApplyId));
        List<SelmAccessApply> list = query(conds, null);
        return list.size() > 0 ? list.get(0) : null;
    }

	public void saveAttach(SelmAttach attach) {
		if(attach.getBlContent() == null){
			String sql = "INSERT INTO SELM_ATTACH (ST_ATTACH_ID," +
					"ST_LINK_TABLE," +
					"ST_LINK_ID," +
					"ST_ATTACH_TYPE," +
					"ST_FILENAME," +
					"ST_FILE_SIZE," +
					"CL_CONTENT," +
					"ST_FILE_TYPE," +
					"NM_ORDER," +
					"DT_CREATE," +
					"DT_UPDATE," +
					"ST_EXT1," +
					"ST_EXT2) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)";
			Object[] obj = {
					attach.getStAttachId(),
					attach.getStLinkTable(),
					attach.getStLinkId(),
					attach.getStAttachType(),
					attach.getStFilename(),
					attach.getStFileSize(),
					attach.getClContent(),
					attach.getStFileType(),
					attach.getNmOrder(),
					attach.getDtCreate(),
					attach.getDtUpdate(),
					attach.getStExt1(),
					attach.getStExt2()
				};
	        if (con == null) {
	            SQL.execute(sql, obj);
	        } else {
	            SQL.execute(con, sql, obj);
	        }
		} else {
			String sql = "INSERT INTO SELM_ATTACH (ST_ATTACH_ID," +
					"ST_LINK_TABLE," +
					"ST_LINK_ID," +
					"ST_ATTACH_TYPE," +
					"ST_FILENAME," +
					"ST_FILE_SIZE," +
					"CL_CONTENT," +
					"BL_CONTENT," +
					"BL_SMALL_CONTENT," +
					"ST_FILE_TYPE," +
					"NM_ORDER," +
					"DT_CREATE," +
					"DT_UPDATE," +
					"ST_EXT1," +
					"ST_EXT2) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
			Object[] obj = {
					attach.getStAttachId(),
					attach.getStLinkTable(),
					attach.getStLinkId(),
					attach.getStAttachType(),
					attach.getStFilename(),
					attach.getStFileSize(),
					attach.getClContent(),
					attach.getBlContent(),
					attach.getBlSmallContent(),
					attach.getStFileType(),
					attach.getNmOrder(),
					attach.getDtCreate(),
					attach.getDtUpdate(),
					attach.getStExt1(),
					attach.getStExt2()
				};
	        if (con == null) {
	            SQL.execute(sql, obj);
	        } else {
	            SQL.execute(con, sql, obj);
	        }
		}
	}
	
	public void upAttach(SelmAttach attach) {
		if(attach.getBlContent() == null){
			String sql = "update SELM_ATTACH set ST_LINK_TABLE = ?," +
				"ST_LINK_ID = ?," +
				"ST_ATTACH_TYPE=?," +
				"ST_FILENAME= ?," +
				"ST_FILE_SIZE= ?," +
				"CL_CONTENT= ?," +
				"BL_CONTENT= ?," +
				"BL_SMALL_CONTENT= ?," +
				"ST_FILE_TYPE= ?," +
				"NM_ORDER= ?," +
				"DT_CREATE= ?," +
				"DT_UPDATE= ?," +
				"ST_EXT1= ?," +
				"ST_EXT2= ? where ST_ATTACH_ID = ?";
			Object[] obj = {
					attach.getStLinkTable(),
					attach.getStLinkId(),
					attach.getStAttachType(),
					attach.getStFilename(),
					attach.getStFileSize(),
					attach.getClContent(),
					attach.getStFileType(),
					attach.getNmOrder(),
					attach.getDtCreate(),
					attach.getDtUpdate(),
					attach.getStExt1(),
					attach.getStExt2(),
					attach.getStAttachId()
				};
	        if (con == null) {
	            SQL.execute(sql, obj);
	        } else {
	            SQL.execute(con, sql, obj);
	        }
		} else {
			String sql = "update SELM_ATTACH set ST_LINK_TABLE = ?," +
					"ST_LINK_ID = ?," +
					"ST_ATTACH_TYPE=?," +
					"ST_FILENAME= ?," +
					"ST_FILE_SIZE= ?," +
					"CL_CONTENT= ?," +
					"BL_CONTENT= ?," +
					"BL_SMALL_CONTENT= ?," +
					"ST_FILE_TYPE= ?," +
					"NM_ORDER= ?," +
					"DT_CREATE= ?," +
					"DT_UPDATE= ?," +
					"ST_EXT1= ?," +
					"ST_EXT2= ? where ST_ATTACH_ID = ?";
			Object[] obj = {
					
					attach.getStLinkTable(),
					attach.getStLinkId(),
					attach.getStAttachType(),
					attach.getStFilename(),
					attach.getStFileSize(),
					attach.getClContent(),
					attach.getBlContent(),
					attach.getBlSmallContent(),
					attach.getStFileType(),
					attach.getNmOrder(),
					attach.getDtCreate(),
					attach.getDtUpdate(),
					attach.getStExt1(),
					attach.getStExt2(),
					attach.getStAttachId()
				};
	        if (con == null) {
	            SQL.execute(sql, obj);
	        } else {
	            SQL.execute(con, sql, obj);
	        }
		}
	}

	public void update(String applytitle,String applycontent,String stAttachId,Timestamp timestamp) {
		 String sql = "update SELM_ACCESS_APPLY set ST_APPLY_TITLE = ?,ST_APPLY_CONTENT=?,DT_CREATE= ? where ST_ATTACH_ID = ?";
	        Object[] obj = {applytitle,	applycontent,timestamp,stAttachId};
	        if (con == null) {
	            SQL.execute(sql, obj);
	        } else {
	            SQL.execute(con, sql, obj);
	        }
	    }
	public void updateStatus(String status,String userId,String userName,Timestamp timestamp,String stAttachId) {
		 String sql = "update SELM_ACCESS_APPLY set NM_STATUS = ?,ST_AUDIT_USER_ID=?,ST_AUDIT_USER_NAME= ?,DT_AUDIT=? where ST_ATTACH_ID = ?";
	        Object[] obj = {status,	userId,userName,timestamp,stAttachId};
	        if (con == null) {
	            SQL.execute(sql, obj);
	        } else {
	            SQL.execute(con, sql, obj);
	        }
	    }
	
	/*public void dow() {
		 String sql = "SELECT * FROM SELM_ATTACH where ST_ATTACH_ID = ?";
	        Object[] obj = {};
	        if (con == null) {
	            SQL.execute(sql, obj);
	        } else {
	            SQL.execute(con, sql, obj);
	        }
	    }*/


}
