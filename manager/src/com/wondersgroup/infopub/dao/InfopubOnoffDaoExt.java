package com.wondersgroup.infopub.dao;

import java.sql.Connection;
import java.util.List;

import org.springframework.stereotype.Repository;

import wfc.service.database.Condition;
import wfc.service.database.Conditions;
import wfc.service.database.RecordSet;
import wfc.service.database.SQL;

import com.wondersgroup.infopub.bean.InfopubOnoff;

/**
 * 设备开关机
 * 
 * @author generated by wfc.facility.tool.autocode.InternalDaoGenerator
 */
@Repository
public class InfopubOnoffDaoExt extends InfopubOnoffDao {

	@SuppressWarnings("unused")
	private Connection con = null;

	public InfopubOnoffDaoExt() {
	}

	public InfopubOnoffDaoExt(Connection con) {
		this.con = con;
	}

	public InfopubOnoff getWeekCycle(String stDeviceId) {
		Conditions conds = Conditions.newAndConditions();
		conds.add(new Condition("ST_DEVICE_ID", Condition.OT_EQUAL, stDeviceId));
		conds.add(new Condition("ST_PTYPE", Condition.OT_EQUAL, "WEEK"));
		List<InfopubOnoff> list = query(conds, null);
		return list.size() > 0 ? list.get(0) : null;
	}

	public void deleteByDeviceId(String stDeviceId) {
		Conditions conds = Conditions.newAndConditions();
		conds.add(new Condition("ST_DEVICE_ID", Condition.OT_EQUAL, stDeviceId));
		delete(conds);
	}

	/**
	 * 获取设备今天开关机日期
	 * 
	 * @param deviceId
	 * @return
	 */
	public InfopubOnoff getTodayOnoff(String deviceId) {
		InfopubOnoff infopubOnoff = null;
		String sql = " SELECT ST_PTYPE,ST_ON_TIME,ST_OFF_TIME,ST_PERIOD,DT_ONOFF FROM	INFOPUB_ONOFF IO"
				+ " WHERE ST_DEVICE_ID = ? AND ST_PTYPE = 'DAY' AND CONVERT (VARCHAR(100), DT_ONOFF, 23) = CONVERT (VARCHAR(100), GETDATE(), 23)";
		Object[] object = { deviceId };
		RecordSet rs = SQL.execute(sql, object);
		while (rs.next()) {
			infopubOnoff = new InfopubOnoff();
			infopubOnoff.setStOffTime(rs.getOriginalString("ST_OFF_TIME"));
			infopubOnoff.setStOnTime(rs.getOriginalString("ST_ON_TIME"));
			infopubOnoff.setStPtype(rs.getOriginalString("ST_PTYPE"));
			infopubOnoff.setStPeriod(rs.getOriginalString("ST_PERIOD"));
			infopubOnoff.setDtOnoff(rs.getTimestamp("DT_ONOFF"));
		}
		return infopubOnoff;
	}
	
	/**
	 * 获取设备开关机周期
	 * 
	 * @param deviceId
	 * @return
	 */
	public InfopubOnoff getWeekOnoff(String deviceId) {
		InfopubOnoff infopubOnoff = null;
		String sql = " SELECT ST_PTYPE,ST_ON_TIME,ST_OFF_TIME,ST_PERIOD,DT_ONOFF FROM	INFOPUB_ONOFF IO"
				+ " WHERE ST_DEVICE_ID = ? AND ST_PTYPE = 'WEEK'";
		Object[] object = { deviceId };
		RecordSet rs = SQL.execute(sql, object);
		while (rs.next()) {
			infopubOnoff = new InfopubOnoff();
			infopubOnoff.setStOffTime(rs.getOriginalString("ST_OFF_TIME"));
			infopubOnoff.setStOnTime(rs.getOriginalString("ST_ON_TIME"));
			infopubOnoff.setStPtype(rs.getOriginalString("ST_PTYPE"));
			infopubOnoff.setStPeriod(rs.getOriginalString("ST_PERIOD"));
			infopubOnoff.setDtOnoff(rs.getTimestamp("DT_ONOFF"));
		}
		return infopubOnoff;
	}
}
