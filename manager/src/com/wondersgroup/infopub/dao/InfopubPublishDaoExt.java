package com.wondersgroup.infopub.dao;

import java.sql.Connection;
import java.util.List;

import org.springframework.stereotype.Repository;

import wfc.service.database.Condition;
import wfc.service.database.Conditions;
import wfc.service.database.RecordSet;
import wfc.service.database.SQL;

import com.wondersgroup.infopub.bean.InfopubPublish;
import com.wondersgroup.infopub.bean.InfopubPublishExt;

/**
 * 设备发布
 * @author generated by wfc.facility.tool.autocode.InternalDaoGenerator
 */
@Repository
public class InfopubPublishDaoExt extends InfopubPublishDao{

    @SuppressWarnings("unused")
	private Connection con = null;

    public InfopubPublishDaoExt() {
    }

    public InfopubPublishDaoExt(Connection con) {
        this.con = con;
    }
    
	public InfopubPublishExt getWeekCycle(String stDeviceId) {
		InfopubPublishExt infopubPublish = null;
		String sql = "SELECT "+
						" IP.ST_PUBLISH_ID, "+
						" IP.ST_PTYPE, "+
						" IP.ST_PSTART, "+
						" IP.ST_PEND, "+
						" IP.ST_PERIOD, "+
						" IP.DT_PUBLISH, "+
						" IA.CL_CONTENT, "+
						" IP.ST_PSOURCE_ID, "+
						" IP.ST_PUBLISH_NAME, "+
						" IDI.ST_DEVICE_MAC "+
					" FROM "+
						" INFOPUB_PUBLISH IP "+
						" LEFT JOIN INFOPUB_DEVICE_INFO IDI ON IP.ST_DEVICE_ID = IDI.ST_DEVICE_ID "+
						" LEFT JOIN INFOPUB_PSOURCE IPS ON IP.ST_PSOURCE_ID = IPS.ST_PSOURCE_ID "+
						" LEFT JOIN INFOPUB_ATTACHMENT IA ON IA.ST_ATTACH_ID = IPS.ST_ATTACH_ID "+
					" WHERE "+
						" IDI.ST_DEVICE_ID = ? "+
						" AND ST_PTYPE = 'WEEK' ";
		Object[] object = { stDeviceId };
		RecordSet rs = SQL.execute(sql, object);
		while (rs.next()) {
			infopubPublish = new InfopubPublishExt();
			infopubPublish.setStPublishId(rs.getOriginalString("ST_PUBLISH_ID"));
			infopubPublish.setStPtype(rs.getOriginalString("ST_PTYPE"));
			infopubPublish.setStPstart(rs.getOriginalString("ST_PSTART"));
			infopubPublish.setStPend(rs.getOriginalString("ST_PEND"));
			infopubPublish.setStPeriod(rs.getOriginalString("ST_PERIOD"));
			infopubPublish.setDtPublish(rs.getTimestamp("DT_PUBLISH"));
			infopubPublish.setClContent(rs.getOriginalString("CL_CONTENT"));
			infopubPublish.setMac(rs.getOriginalString("ST_DEVICE_MAC"));
			infopubPublish.setStPublishName(rs.getOriginalString("ST_PUBLISH_NAME"));
			infopubPublish.setStPsourceId(rs.getOriginalString("ST_PSOURCE_ID"));
		}
		return infopubPublish;
	}
	
	public InfopubPublishExt getTodayPublish(String deviceId) {
		InfopubPublishExt infopubPublish = null;
		String sql = "SELECT "+
						" IP.ST_PTYPE, "+
						" IP.ST_PSTART, "+
						" IP.ST_PEND, "+
						" IP.ST_PERIOD, "+
						" IP.DT_PUBLISH, "+
						" IA.CL_CONTENT, "+
						" IDI.ST_DEVICE_MAC "+
					" FROM "+
						" INFOPUB_PUBLISH IP "+
						" LEFT JOIN INFOPUB_DEVICE_INFO IDI ON IP.ST_DEVICE_ID = IDI.ST_DEVICE_ID "+
						" LEFT JOIN INFOPUB_PSOURCE IPS ON IP.ST_PSOURCE_ID = IPS.ST_PSOURCE_ID "+
						" LEFT JOIN INFOPUB_ATTACHMENT IA ON IA.ST_ATTACH_ID = IPS.ST_ATTACH_ID "+
					" WHERE "+
						" IDI.ST_DEVICE_ID = ? "+
						" AND ST_PTYPE = 'DAY' "+
						" AND CONVERT (VARCHAR(100), IP.DT_PUBLISH, 23) = CONVERT (VARCHAR(100), GETDATE(), 23) "+
						" ORDER BY "+
						" IP.NM_PRIORITY DESC ";
		Object[] object = { deviceId };
		RecordSet rs = SQL.execute(sql, object);
		while (rs.next()) {
			infopubPublish = new InfopubPublishExt();
			infopubPublish.setStPtype(rs.getOriginalString("ST_PTYPE"));
			infopubPublish.setStPstart(rs.getOriginalString("ST_PSTART"));
			infopubPublish.setStPend(rs.getOriginalString("ST_PEND"));
			infopubPublish.setStPeriod(rs.getOriginalString("ST_PERIOD"));
			infopubPublish.setDtPublish(rs.getTimestamp("DT_PUBLISH"));
			infopubPublish.setClContent(rs.getOriginalString("CL_CONTENT"));
			infopubPublish.setMac(rs.getOriginalString("ST_DEVICE_MAC"));
		}
		return infopubPublish;
	}
	
	public InfopubPublishExt getPublish(String deviceId) {
		InfopubPublishExt infopubPublish = null;
		String sql = "SELECT "+
						" IP.ST_PTYPE, "+
						" IP.ST_PSTART, "+
						" IP.ST_PEND, "+
						" IP.ST_PERIOD, "+
						" IP.DT_PUBLISH, "+
						" IA.CL_CONTENT, "+
						" IDI.ST_DEVICE_MAC "+
					" FROM "+
						" INFOPUB_PUBLISH IP "+
						" LEFT JOIN INFOPUB_DEVICE_INFO IDI ON IP.ST_DEVICE_ID = IDI.ST_DEVICE_ID "+
						" LEFT JOIN INFOPUB_PSOURCE IPS ON IP.ST_PSOURCE_ID = IPS.ST_PSOURCE_ID "+
						" LEFT JOIN INFOPUB_ATTACHMENT IA ON IA.ST_ATTACH_ID = IPS.ST_ATTACH_ID "+
					" WHERE "+
						" IDI.ST_DEVICE_ID = ? ";
		Object[] object = { deviceId };
		RecordSet rs = SQL.execute(sql, object);
		while (rs.next()) {
			infopubPublish = new InfopubPublishExt();
			infopubPublish.setStPtype(rs.getOriginalString("ST_PTYPE"));
			infopubPublish.setStPstart(rs.getOriginalString("ST_PSTART"));
			infopubPublish.setStPend(rs.getOriginalString("ST_PEND"));
			infopubPublish.setStPeriod(rs.getOriginalString("ST_PERIOD"));
			infopubPublish.setDtPublish(rs.getTimestamp("DT_PUBLISH"));
			infopubPublish.setClContent(rs.getOriginalString("CL_CONTENT"));
			infopubPublish.setMac(rs.getOriginalString("ST_DEVICE_MAC"));
		}
		return infopubPublish;
	}
	
	public InfopubPublish getByDeviceId(String stDeviceId) {
        Conditions conds = Conditions.newAndConditions();
        conds.add(new Condition("ST_DEVICE_ID", Condition.OT_EQUAL, stDeviceId));
        List<InfopubPublish> list = query(conds, null);
        return list.size() > 0 ? list.get(0) : null;
	}
}
